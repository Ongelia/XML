XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
cd XML
touch new.xml

 24. Добавить файл под гит.
git status
 25. Закоммитить файл.
git add new.xml
git commit -m "1 commit file new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<information_about_yourself>
	  <full_name>Чеховская_Ольга</full_name>
	  <age>45</age>
	  <number_of_pets>1</number_of_pets>
	  <future_desired_salary>1000_евро</future_desired_salary>
	</information_about_yourself>
Esc
:wq
 28. Отправить изменения на внешний репозиторий.
git status
git add new.xml
git commit -m "2 commit file new.xml"

 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
I
<information_about_yourself>
	<favorite_movie>«1984»</favorite_movie>
	<favorite_TV_series>«Интерны»</favorite_TV_series>
	<favorite_food>драники</favorite_food>
	<favorite_time_of_the_year>лето</favorite_time_of_the_year>
	<The_country_you_want_to_visit>Черногория</The_country_you_want_to_visit>
	</information_about_yourself>
Esc
:x

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml

I
<information_about_skills>1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
	2. Что такое клиент-серверная архитектура.
	3. HTTP Методы запросов на сервер.
	4. Коды ответов HTTP сервера.
	5. Структуры HTTP запросов и ответов.
	6. Что такое JSON, XML. Их структура.
	7. Тестирование API через Postman (JS, автотесты API).
	8. Снятие и чтение логов c внешнего сервера.
	9. Снифинг http web трафика через Charles и Fiddler.
	10. Dev Tools веб браузеров (Google Chrome, FireFox).
	11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
	12. Мобильное тестирование.
	13. Особенность iOS, Android, гайдлайны.
	14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
	15. Сборка Android приложений на Android Studio.
	16. ADB (управление андройд девайсами).
	17. Настройка прокси и vpn на iOS и Android.
	18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
	19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
	20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
	21. Доступ к удалённым серверам.
	22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
	23. База данных Postgres (установка, настройка и использование).
	24. Нереляционная база данных Redis (установка, настройка и использование).
	25. Нагрузочное тестирование в Jmeter.
	26. Методология разработки Scrum.
            27. Python. (Изучение основ. Создание клиент серверного приложения)</information_about_skills>
Esc
:wq
 32. Сделать коммит в одну строку.
git commit -am “2 files”
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
git pull

